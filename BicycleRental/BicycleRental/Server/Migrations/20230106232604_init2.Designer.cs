// <auto-generated />
using System;
using BicycleRental.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BicycleRental.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230106232604_init2")]
    partial class init2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BicycleRental.Shared.Models.Bicycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("FrontPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("GearCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Picture2")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Picture3")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Picture4")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrizePerDay")
                        .HasColumnType("float");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TireSize")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bicycle");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "ipsum-fugit-ex",
                            GearCount = 2096956364,
                            Name = "Trent",
                            Place = "North Landen",
                            PrizePerDay = 8.5891312168043026,
                            Region = "Cambridgeshire",
                            TireSize = 27,
                            Type = 6
                        },
                        new
                        {
                            Id = 2,
                            Brand = "veniam-distinctio-non",
                            GearCount = -325212419,
                            Name = "Joaquin",
                            Place = "Howeview",
                            PrizePerDay = 152.33187277249792,
                            Region = "Bedfordshire",
                            TireSize = 24,
                            Type = 4
                        },
                        new
                        {
                            Id = 3,
                            Brand = "facilis-et-fuga",
                            GearCount = -1477872269,
                            Name = "Mose",
                            Place = "Lake Arturochester",
                            PrizePerDay = 203.00585808804587,
                            Region = "Borders",
                            TireSize = 19,
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            Brand = "sit-optio-blanditiis",
                            GearCount = 1132901734,
                            Name = "Daphne",
                            Place = "Cassinshire",
                            PrizePerDay = 234.13790180195451,
                            Region = "Borders",
                            TireSize = 13,
                            Type = 2
                        },
                        new
                        {
                            Id = 5,
                            Brand = "nisi-dicta-sit",
                            GearCount = -84335275,
                            Name = "Amira",
                            Place = "Toyview",
                            PrizePerDay = 229.34429108484181,
                            Region = "Bedfordshire",
                            TireSize = 28,
                            Type = 6
                        });
                });

            modelBuilder.Entity("BicycleRental.Shared.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BicycleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Reservation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BicycleId = 4,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2023, 1, 25, 13, 31, 28, 829, DateTimeKind.Local).AddTicks(2617)
                        },
                        new
                        {
                            Id = 2,
                            BicycleId = 4,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2023, 1, 20, 23, 32, 3, 479, DateTimeKind.Local).AddTicks(4792)
                        },
                        new
                        {
                            Id = 3,
                            BicycleId = 2,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2023, 1, 24, 17, 29, 3, 786, DateTimeKind.Local).AddTicks(380)
                        },
                        new
                        {
                            Id = 4,
                            BicycleId = 4,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2023, 1, 22, 23, 54, 56, 573, DateTimeKind.Local).AddTicks(4852)
                        },
                        new
                        {
                            Id = 5,
                            BicycleId = 3,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2023, 1, 18, 7, 38, 20, 175, DateTimeKind.Local).AddTicks(2866)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
